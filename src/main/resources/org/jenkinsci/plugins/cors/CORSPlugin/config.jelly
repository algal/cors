<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <!--
    This Jelly script is used to produce the global configuration option.

    Jenkins uses a set of tag libraries to provide uniformity in forms.
    To determine where this tag is defined, first check the namespace URI,
    and then look under $JENKINS/views/. For example, <f:section> is defined
    in $JENKINS/views/lib/form/section.jelly.

    It's also often useful to just check other similar scripts to see what
    tags they use. Views are always organized according to its owner class,
    so it should be straightforward to find them.
  -->
  <f:section title="Cross-Origin Resource Sharing">
<!--
     Because this plugin does not use a descriptor, Jenkins will not auto-detect the help-FIELD.html files.

     However, according to https://wiki.jenkins-ci.org/display/JENKINS/Basic+guide+to+Jelly+usage+in+Jenkins ,
     an attribute of, e.g.,  help="/plugin/cors/help-allowedOrigins.html" on the first entry tag should work.
     But it does not.
-->
    <f:entry title="Allowed Origins"   > <f:textbox   name="allowedOrigins"   value   ="${it.allowedOrigins}" />   </f:entry>
    <f:entry title="Allowed Methods"   > <f:textbox   name="allowedMethods"   value   ="${it.allowedMethods}" />   </f:entry>
    <f:entry title="Allowed Headers"   > <f:textbox   name="allowedHeaders"   value   ="${it.allowedHeaders}" />   </f:entry>
    <f:entry title="Preflight Max Age" > <f:textbox   name="preflightMaxAge"  value   ="${it.preflightMaxAge}" />  </f:entry>
    <f:entry title="Allow Credentials" > <f:checkbox  name="allowCredentials" checked ="${it.allowCredentials}" /> </f:entry>
    <f:entry title="Exposed Headers"   > <f:textbox   name="exposedHeaders"   value   ="${it.exposedHeaders}" />   </f:entry>
    <f:entry title="Chain Preflight"   > <f:checkbox  name="chainPreflight"   checked ="${it.chainPreflight}" />   </f:entry>
  </f:section>
</j:jelly>
